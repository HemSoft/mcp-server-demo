name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build and Test

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --no-restore --configuration Release
      
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --collect:"XPlat Code Coverage"
      
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      with:
        fail_ci_if_error: false
        verbose: true

  build-and-publish:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    name: Build Release Artifacts
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Release
      run: dotnet build --no-restore --configuration Release
      
    - name: Publish Linux x64
      run: dotnet publish --no-build --configuration Release --runtime linux-x64 --self-contained false --output ./publish/linux-x64
      
    - name: Publish Windows x64
      run: dotnet publish --no-build --configuration Release --runtime win-x64 --self-contained false --output ./publish/win-x64
      
    - name: Upload Linux Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mcp-server-demo-linux-x64
        path: ./publish/linux-x64/
        
    - name: Upload Windows Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: mcp-server-demo-win-x64
        path: ./publish/win-x64/